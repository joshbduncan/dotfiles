#!/usr/bin/env bash

# shellcheck disable=SC1091
source "${DOTFILES}/zsh/functions/finder.sh"

# shellcheck disable=SC1091
source "${DOTFILES}/zsh/functions/img.sh"

# shellcheck disable=SC1091
source "${DOTFILES}/zsh/functions/fzf.sh"

# shellcheck disable=SC1091
source "${DOTFILES}/zsh/functions/nvim.sh"

# shellcheck disable=SC1091
source "${DOTFILES}/zsh/functions/python.sh"

# Show names of custom functions defined in this file
script_path="$(realpath "${BASH_SOURCE:-$0}")"
function funcs-help() {
    grep -E --only-matching "^(function\s.*\(\))" "$script_path" | sort
}

# Show command history stats
function history-stats() {
    history 0 | awk '{print $2}' | sort | uniq -c | sort -n -r | head
}

# open man page in Preview
function pman() {
    [[ $# -gt 0 ]] && man -t "${1}" 2>/dev/null | ps2pdf - - | open -f -a Preview.app
}

# Get a little shell command help
function cheat() {
    curl cheat.sh/"$1"
}

# Calculate provided expression
function calc() {
    bc -l <<<"$@"
}

# Generate a shortlink for a URL
# arg1: Full URL to shorten
function tiny() {
    local URL=${1:?}
    curl -s -w "\n" "http://tinyurl.com/api-create.php?url=$URL"
}

# Count the numbers of all characters in a string/file
function countchars() {
    fold -w1 | grep "\S" | sort | uniq -c | while read -r ct char; do echo "'$char' ($ct)"; done
}

# Remove ._DS_STORE files recursively
function rm-ds() {
    echo "removing ._DS_STORE files recursively..."
    find . -type f -name .DS_Store -delete
}

# Remove empty folders recursively
function rm-empty-folders() {
    echo "removing empty folders recursively..."
    find . -type d -empty -delete
}

# Backup photos to BRRR
function things-backup() {
    echo "backing up things database"
    cp -R  ~/Library/Group\ Containers/JLMPQHK86H.com.culturedcode.ThingsMac/ThingsData-6FDE0 ~/Dropbox/backup/ThingsData-65DE0.bak
}

# Backup photos to BRRR
function photos-backup() {
    echo "backing up photos to BRRR"
    rsync -av --progress /Volumes/SSD2021A/PHOTOS /Volumes/BRRR/PHOTO-BACKUP
}
